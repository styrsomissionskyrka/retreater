### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Date

type Mutation {
  createRetreatDraft(title: String!): Retreat
  setRetreatStatus(id: ID!, status: RetreatStatusEnum!): Retreat
  updateRetreat(id: ID!, input: UpdateRetreatInput!): Retreat
}

enum OrderEnum {
  ASC
  DESC
}

interface PaginatedQuery {
  paginationMeta: PaginationMeta!
}

type PaginatedRetreat implements PaginatedQuery {
  items: [Retreat!]!
  paginationMeta: PaginationMeta!
}

type PaginatedUser implements PaginatedQuery {
  items: [User!]!
  paginationMeta: PaginationMeta!
}

type PaginationMeta {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  perPage: Int!
  totalItems: Int!
  totalPages: Int!
}

type Price {
  active: Boolean!
  amount: Int!
  created: Date!
  currency: String!
  id: ID!
}

type Product {
  active: Boolean!
  created: Date!
  description: String
  id: ID!
  images: [String!]!
  name: String
  prices(active: Boolean): [Price!]!
  updated: Date!
  url: String
}

type Query {
  me: User
  retreat(id: ID, slug: String): Retreat
  retreats(order: OrderEnum! = ASC, orderBy: RetreatOrderByEnum! = CREATED_AT, page: Int! = 1, perPage: Int! = 25, search: String, status: RetreatStatusEnum): PaginatedRetreat!
  user(id: ID!): User
  users(order: OrderEnum! = ASC, orderBy: UserSortByEnum! = CREATED_AT, page: Int! = 0, perPage: Int! = 25, search: String): PaginatedUser
}

type Retreat {
  content: String
  createdAt: Date!
  endDate: Date
  id: ID!
  maxParticipants: Int
  products: [Product!]!
  registrationFee: Product
  slug: String!
  startDate: Date
  status: RetreatStatusEnum!
  title: String!
  updatedAt: Date!
}

enum RetreatOrderByEnum {
  CREATED_AT
  START_DATE
  STATUS
}

enum RetreatStatusEnum {
  ARCHIVED
  DRAFT
  PUBLISHED
}

input UpdateRetreatInput {
  content: String
  endDate: Date
  maxParticipants: Int
  startDate: Date
  title: String
}

type User {
  createdAt: Date!
  email: String!
  emailVerified: Boolean!
  id: ID!
  lastIp: String
  lastLogin: Date
  loginsCount: Int!
  name: String
  picture: String
  roles: [UserRoleEnum!]!
  updateAt: Date!
}

enum UserRoleEnum {
  ADMIN
  EDITOR
  SUPER_ADMIN
}

enum UserSortByEnum {
  CREATED_AT
  EMAIL
  NAME
}
