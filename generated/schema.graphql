### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Date custom scalar type"""
scalar Date

type Mutation {
  createRetreatDraft(title: String!): Retreat
  setRetreatStatus(id: ID!, status: RetreatStatusEnum!): Retreat
  updateRetreat(id: ID!, input: UpdateRetreatInput!): Retreat
}

enum OrderEnum {
  ASC
  DESC
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

interface PaginatedQuery {
  paginationMeta: PaginationMeta
}

type PaginatedUser implements PaginatedQuery {
  paginationMeta: PaginationMeta
  users: [User!]!
}

type PaginationMeta {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  perPage: Int!
  totalItems: Int!
  totalPages: Int!
}

type Query {
  me: User
  retreat(id: ID, slug: String): Retreat
  retreats(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
    order: OrderEnum = ASC
    orderBy: RetreatOrderByEnum = START_DATE
    status: RetreatStatusEnum
  ): RetreatConnection
  user(id: ID!): User
  users(order: OrderEnum! = ASC, orderBy: UserSortByEnum! = CREATED_AT, page: Int! = 0, perPage: Int! = 25, search: String): PaginatedUser
}

type Retreat {
  content: String
  createdAt: Date!
  createdBy: User
  endDate: Date
  id: ID!
  maxParticipants: Int
  slug: String!
  startDate: Date
  status: RetreatStatusEnum!
  title: String!
  updatedAt: Date!
}

type RetreatConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [RetreatEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type RetreatEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Retreat
}

enum RetreatOrderByEnum {
  CREATED_AT
  START_DATE
  STATUS
}

enum RetreatStatusEnum {
  ARCHIVED
  DRAFT
  PUBLISHED
}

input UpdateRetreatInput {
  content: String
  endDate: Date
  maxParticipants: Int
  startDate: Date
  title: String
}

type User {
  createdAt: Date!
  email: String!
  emailVerified: Boolean!
  id: ID!
  lastIp: String
  lastLogin: Date
  loginsCount: Int!
  name: String
  picture: String
  roles: [UserRoleEnum!]!
  updateAt: Date!
}

enum UserRoleEnum {
  ADMIN
  EDITOR
  SUPER_ADMIN
}

enum UserSortByEnum {
  CREATED_AT
  EMAIL
  NAME
}
