### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Date custom scalar type"""
scalar Date

type Mutation {
  createRetreatDraft(title: String!): Retreat
  setRetreatStatus(id: ID!, status: RetreatStatusEnum!): Retreat
  updateRetreat(id: ID!, input: UpdateRetreatInput!): Retreat
}

enum OrderEnum {
  ASC
  DESC
}

interface PaginatedQuery {
  paginationMeta: PaginationMeta
}

type PaginatedRetreat implements PaginatedQuery {
  paginationMeta: PaginationMeta
  retreats: [Retreat!]!
}

type PaginatedUser implements PaginatedQuery {
  paginationMeta: PaginationMeta
  users: [User!]!
}

type PaginationMeta {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  perPage: Int!
  totalItems: Int!
  totalPages: Int!
}

type Query {
  me: User
  retreat(id: ID, slug: String): Retreat
  retreats(order: OrderEnum! = ASC, orderBy: RetreatOrderByEnum! = START_DATE, page: Int! = 0, perPage: Int! = 25, search: String, status: [RetreatStatusEnum!]): PaginatedRetreat
  user(id: ID!): User
  users(order: OrderEnum! = ASC, orderBy: UserSortByEnum! = CREATED_AT, page: Int! = 0, perPage: Int! = 25, search: String): PaginatedUser
}

type Retreat {
  content: String
  createdAt: Date!
  createdBy: User
  endDate: Date
  id: ID!
  maxParticipants: Int
  slug: String!
  startDate: Date
  status: RetreatStatusEnum!
  title: String!
  updatedAt: Date!
}

enum RetreatOrderByEnum {
  CREATED_AT
  START_DATE
  STATUS
}

enum RetreatStatusEnum {
  ARCHIVED
  DRAFT
  PUBLISHED
}

input UpdateRetreatInput {
  content: String
  endDate: Date
  maxParticipants: Int
  startDate: Date
  title: String
}

type User {
  createdAt: Date!
  email: String!
  emailVerified: Boolean!
  id: ID!
  lastIp: String
  lastLogin: Date
  loginsCount: Int!
  name: String
  picture: String
  roles: [UserRoleEnum!]!
  updateAt: Date!
}

enum UserRoleEnum {
  ADMIN
  EDITOR
  SUPER_ADMIN
}

enum UserSortByEnum {
  CREATED_AT
  EMAIL
  NAME
}
